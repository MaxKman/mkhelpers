% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_umap_grid.R
\name{plot_umap_grid}
\alias{plot_umap_grid}
\title{Project a list of discrete or continous features on a umap plot}
\usage{
plot_umap_grid(
  tbl_x,
  feature_list,
  quantile_limits = list(c(0.3, 0.99)),
  n_cols = 3,
  out_width = 180,
  output_path,
  show_labels = FALSE,
  show_legend = TRUE,
  order_values = list(c("sorted", "random")),
  invert_sort_direction = FALSE,
  ...
)
}
\arguments{
\item{tbl_x}{A tibble containing umap coordinates and feature columns}

\item{feature_list}{List of feature columns to be plotted}

\item{quantile_limits}{Quantile limits applied to continuous feature. E.g. c(0.1, 0.9) applies the dynamic range of the color scale only to to values above the 10th percentile and below the 90th percentile. Set to a one item list, e.g. list(c(0.1, 0.9)) to affect all plots or a provide separate settings for each feature as a list.}

\item{n_cols}{Number of columns to plot}

\item{out_width}{Width of image output in mm}

\item{output_path}{Output path and file name (should end in .png)}

\item{show_labels}{Whether to label the mean coordinates of discrete feature values. Set to TRUE or FALSE to affect all plots or give a list of booleans for all features}

\item{show_legend}{Whether to show the ggplot legend. Set to TRUE or FALSE to affect all plots or give a list of booleans for all features.}

\item{order_values}{Whether to plot higher values in front of lower values ("sorted") or in random order ("random"). Provide a list to set individually for each plot.}

\item{invert_sort_direction}{Whether to invert sort direction (plot lower values in front). Provide a list to set individually for each plot.}

\item{...}{Other parameters passed on to plot_umap. Note, that umap_dim_col_1 and umap_dim_col_2 need to be provided.}
}
\value{

}
\description{
Project a list of discrete or continous features on a umap plot
}
\examples{
\dontrun{
 library(Seurat)
 library(SeuratData)
 InstallData("pbmc3k")
 seu_pbmc <- LoadData("pbmc3k", "pbmc3k.final")

 tbl_x <- seu_extract_tbl(seu_x = seu_pbmc,
   reduction = "umap",
   metadata_cols = "seurat_clusters",
   extract_expr = TRUE,
   genes_extract = c("CD3D", "CD19"),
   assay_extract = "RNA",
   slot_extract = "data",
   expr_format = "wide")
plot_umap_grid(tbl_x = tbl_x, umap_dim_col_1 = UMAP_1, umap_dim_col_2 = UMAP_2, output_path = "~/test_plot_umap_grid.png", feature_list = c("seurat_clusters", "CD3D", "CD19"), show_labels = TRUE, point_size = 0.5)
}
}
